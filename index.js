const express = require('express');
const cors = require('cors');
const Stripe = require('stripe');
const { v4: uuidv4} = require('uuid');
const dotenv = require('dotenv');

// Load env vars
dotenv.config({ path: './config/config.env' });
const stripekey = process.env.STRIPE_KEY;
console.log(stripekey);
const stripe = new Stripe( stripekey == undefined ? "" : stripekey,  {
    apiVersion: '2020-08-27',
  })
 
 const app = express()
 app.use(cors())
 app.use(express.json())
 
app.post('/payment', async (req, res) => {
    console.log(req.body);
    const { email,product , authToken } = req.body;
    const { token } = authToken;
    const { card } = token;

    console.log(card);

    console.log("=============== payment initiate ===============")

    // unique ID generated by client
     const idempotencyKey = uuidv4()

     try {
         const customer = await stripe.customers.create({
             email: email,
             source: token.id
         })

         console.log('Customer Created.....')
         console.log(customer)
         
         const response = await stripe.charges.create({
             amount: product.amount * 100,
             currency: 'CAD',
             customer: customer.id,
             receipt_email: email,
             description: product.description,
             shipping: {
                 name: card.name,
                 address: {
                     line1: "Toronto",
                     country: card.address_country,
                  }
             }
     
         },{ idempotencyKey: idempotencyKey})

         console.log("charge response")
         console.log(response)
           
         
      
         res.json(response)
         
     } catch (err) {
         console.log("=============== error ===============")
        console.log(err)
        res.json(err)
     }
  
})

app.use('/', (req, res) => {
    
    res.json('Thank you...')
})

const PORT = process.env.PORT || 8000;

app.listen(PORT, () => {
    
    console.log(`Listening to port ${PORT}`)
})
